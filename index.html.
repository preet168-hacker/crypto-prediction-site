<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Crypto Prediction and Graph</title>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
    <style>
        body {
            font-family: Arial, sans-serif;
            text-align: center;
            background-color: #f4f4f4;
            margin: 0;
            padding: 20px;
        }
        #chart-container {
            width: 80%;
            margin: auto;
        }
        .container {
            margin: 20px 0;
        }
        .prediction-form {
            margin-top: 20px;
        }
        #wheel-container {
            position: relative;
            margin-top: 20px;
        }
        #wheel {
            width: 100px;
            height: 100px;
            border: 10px solid #3498db;
            border-radius: 50%;
            margin: 20px auto;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 18px;
            color: #3498db;
            font-weight: bold;
            text-align: center;
            transition: transform 2s ease-out;
        }
        #result {
            margin-top: 20px;
            font-size: 24px;
            font-weight: bold;
        }
    </style>
</head>
<body>
    <h1>Live Crypto Price & Prediction</h1>

    <div id="chart-container">
        <canvas id="cryptoChart"></canvas>
    </div>

    <div class="container">
        <h2>Predict Next Price Movement</h2>
        <form class="prediction-form">
            <label for="prediction">Will the price go up or down? </label>
            <select id="prediction" name="prediction">
                <option value="up">Up</option>
                <option value="down">Down</option>
            </select>
            <button type="button" onclick="submitPrediction()">Submit Prediction</button>
        </form>
    </div>

    <div id="wheel-container">
        <div id="wheel">Spin</div>
    </div>

    <div id="result"></div>

    <script>
        const apiUrl = 'https://api.coingecko.com/api/v3/coins/bitcoin/market_chart?vs_currency=usd&days=1'; // Get Bitcoin data for 1 day

        // Function to fetch the live data
        async function fetchData() {
            try {
                const response = await axios.get(apiUrl);
                const data = response.data;
                const prices = data.prices;
                const timeStamps = prices.map(item => new Date(item[0]).toLocaleTimeString());
                const priceValues = prices.map(item => item[1]);

                // Create a chart
                createChart(timeStamps, priceValues);
            } catch (error) {
                console.error('Error fetching data:', error);
            }
        }

        // Function to create a chart
        function createChart(labels, data) {
            const ctx = document.getElementById('cryptoChart').getContext('2d');
            new Chart(ctx, {
                type: 'line',
                data: {
                    labels: labels,
                    datasets: [{
                        label: 'Bitcoin Price (USD)',
                        data: data,
                        fill: false,
                        borderColor: 'rgb(75, 192, 192)',
                        tension: 0.1
                    }]
                }
            });
        }

        // Prediction form logic
        function submitPrediction() {
            const prediction = document.getElementById('prediction').value;
            const resultText = `You predicted that the price will go ${prediction}. Let's spin the wheel!`;

            document.getElementById('result').textContent = resultText;
            spinWheel(prediction);  // Call the wheel spin function
        }

        // Spin the wheel and show random result
        function spinWheel(prediction) {
            const wheel = document.getElementById('wheel');
            const resultText = document.getElementById('result');
            
            // Start spinning the wheel
            wheel.style.transform = 'rotate(0deg)';
            setTimeout(() => {
                const randomDegree = Math.floor(Math.random() * 360) + 3600; // Random rotations
                wheel.style.transition = 'transform 2s ease-out';  // Add smooth transition
                wheel.style.transform = `rotate(${randomDegree}deg)`;

                // After spin ends, show random result
                setTimeout(() => {
                    const randomOutcome = Math.random() > 0.5 ? 'Yes' : 'No';
                    const actualMovement = randomOutcome === 'Yes' ? 'up' : 'down';

                    resultText.textContent = `You predicted ${prediction}. The wheel says ${randomOutcome} (${actualMovement}).`;
                }, 2000); // After 2 seconds (spin duration), show result
            }, 100);
        }

        // Initial fetch
        fetchData();
    </script>
</body>
</html>
